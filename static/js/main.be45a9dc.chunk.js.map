{"version":3,"sources":["components/title/title.jsx","components/news/news.jsx","components/input/input.jsx","components/select/select.jsx","components/pagination/pagination.jsx","containers/news/news.jsx","registerServiceWorker.js","index.js"],"names":["Title","_ref","title","react_default","a","createElement","className","defaultProps","NewsPost","author","created_at","num_comments","points","url","href","concat","Date","toLocaleDateString","Input","onChange","value","onKeyPress","placeholder","handleChange","options","map","_ref2","label","key","Pagination","onClick","page","lastPage","data-name","gapBtns","middleBtn","lastBtns","num","renderPaginationBtns","BASE_PATH","SEARCH_PATH","SEARCH_PARAM","PAGE_HITS","PAGE_PARAM","HITS","News","state","searchQuery","result","hitsPerPage","fetchData","fetch","then","res","json","_this","setNews","catch","error","handleInputChange","target","setState","getSearch","_this$state","handleHitsChange","_ref3","handlePageChange","_ref4","btnType","getAttribute","isNaN","updatePage","number","_this$state2","_this$state3","this","_this$state4","_result$hits","hits","nbPages","components_title_title","components_select_select","pagination_pagination","input_input","_ref5","objectID","news_news","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","render","containers_news_news","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.be45a9dc.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './title.css';\r\n\r\nconst Title = ({ title }) => (\r\n  <h1 className=\"title\">{title}</h1>\r\n);\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nTitle.defaultProps = {\r\n  title: 'Simple title',\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './news.css';\r\n\r\nconst NewsPost = ({ author, created_at, num_comments, title, points, url }) => (\r\n  <li className=\"news\">\r\n    <div className=\"description\">\r\n      <a href={url} className=\"newsTitle\">{title}</a>\r\n      <span className=\"text\">{`${points} points`}</span>\r\n      <span className=\"comments\">{`${num_comments} comments`}</span>\r\n      <span className=\"date\">{new Date(created_at).toLocaleDateString()}</span>\r\n      <span className=\"author\">{author}</span>\r\n    </div>\r\n  </li>\r\n);\r\n\r\nNewsPost.propTypes = {\r\n  author: PropTypes.string,\r\n  created_at: PropTypes.string.isRequired,\r\n  num_comments: PropTypes.number,\r\n  title: PropTypes.string,\r\n  points: PropTypes.number,\r\n  url: PropTypes.string,\r\n}\r\n\r\nNewsPost.defaultProps = {\r\n  author: '',\r\n  num_comments: 0,\r\n  title: 'Here should be a title',\r\n  points: 0,\r\n  url: '#'\r\n}\r\n\r\nexport default NewsPost;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './input.css';\r\n\r\nconst Input = ({ onChange, value, onKeyPress }) => (\r\n  <div className=\"inputWrapper\">\r\n    <i className=\"fas fa-search\" />\r\n    <input\r\n      className=\"input\"\r\n      placeholder=\"Click to search\"\r\n      onChange={onChange}\r\n      onKeyPress={onKeyPress}\r\n      value={value}\r\n    />\r\n  </div>\r\n);\r\n\r\nInput.propTypes = {\r\n  onChange: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n  value: PropTypes.string,\r\n}\r\n\r\nInput.defaultProps = {\r\n  onChange: () => {},\r\n  onKeyPress: () => {},\r\n  value: ''\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './select.css';\r\n\r\nconst Input = ({ handleChange, options, value }) => (\r\n  <div className=\"selectWrapper\">\r\n    <select onChange={handleChange} value={value}>\r\n      {options.map(({ value, label }) =>\r\n        <option key={value} value={value}>{label}</option>\r\n      )}\r\n    </select>\r\n    <span className=\"selectText\">per page</span>\r\n  </div>\r\n);\r\n\r\nInput.propTypes = {\r\n  handleChange: PropTypes.func,\r\n  options: PropTypes.array,\r\n  value: PropTypes.number,\r\n}\r\n\r\nInput.defaultProps = {\r\n  onChange: () => {},\r\n  options: [],\r\n  value: 0,\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './pagination.css';\r\n\r\nconst renderPaginationBtns = (onClick, page, lastPage) => {\r\n  const startBtns = [page, page + 1, page + 2];\r\n  const gapBtns = [page - 2, page - 1, page];\r\n  const middleBtn = [ '...' ];\r\n  const lastBtns = [lastPage - 3, lastPage - 2, lastPage - 1];\r\n\r\n  let btnsArr = [];\r\n\r\n  if (page < lastPage - 6) {\r\n    btnsArr = [...startBtns, ...middleBtn, ...lastBtns]\r\n  } else if (page < lastPage - 4) {\r\n    btnsArr = [...gapBtns, ...middleBtn, ...lastBtns]\r\n  } else if (page < lastPage - 3) {\r\n    btnsArr = [...gapBtns, ...lastBtns] // last 6 pages\r\n  } else {\r\n    btnsArr = [...middleBtn, ...lastBtns] // last 3 pages\r\n  }\r\n\r\n  return btnsArr.map(num => {\r\n    return num === '...' ?\r\n    num :\r\n    <button\r\n      key={num}\r\n      onClick={onClick}\r\n      data-name={num}\r\n      className={num === page ? 'active' : ''}\r\n    >{num}</button>\r\n  });\r\n};\r\n\r\nconst Pagination = ({ onClick, page, lastPage }) => (\r\n  <div className=\"paginationWrapper\">\r\n    { page !== 0 && <button onClick={onClick} data-name=\"prev\">{'<<'}</button> }\r\n    {renderPaginationBtns(onClick, page, lastPage)}\r\n    { page !== lastPage - 1 && <button onClick={onClick} data-name=\"next\">{'>>'}</button> }\r\n  </div>\r\n);\r\n\r\nPagination.propTypes = {\r\n  onClick: PropTypes.func,\r\n  page: PropTypes.number,\r\n  lastPage: PropTypes.number,\r\n}\r\n\r\nPagination.defaultProps = {\r\n  onClick: () => {},\r\n  page: 0,\r\n  lastPage: 0,\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\n\r\nimport Title from '../../components/title/title';\r\nimport NewsPost from '../../components/news/news';\r\nimport Input from '../../components/input/input';\r\nimport Select from '../../components/select/select';\r\nimport Pagination from '../../components/pagination/pagination';\r\n\r\nconst BASE_PATH = 'https://hn.algolia.com/api/v1';\r\nconst SEARCH_PATH = '/search';\r\nconst SEARCH_PARAM = 'query=';\r\nconst PAGE_HITS = 'hitsPerPage=';\r\nconst PAGE_PARAM = 'page=';\r\n\r\nconst HITS = [\r\n  {\r\n    value: 10,\r\n    label: 10,\r\n  },\r\n  {\r\n    value: 20,\r\n    label: 20,\r\n  },\r\n  {\r\n    value: 40,\r\n    label: 40,\r\n  },\r\n  {\r\n    value: 50,\r\n    label: 50,\r\n  }\r\n]\r\n\r\nclass News extends Component {\r\n\r\n  state = {\r\n    searchQuery: '',\r\n    result: {},\r\n    hitsPerPage: 20,\r\n    page: 0,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { searchQuery, hitsPerPage, page } = this.state;\r\n    this.fetchData(searchQuery, hitsPerPage, page);\r\n  }\r\n\r\n  fetchData = (searchQuery, hitsPerPage, page) => {\r\n    fetch(`${BASE_PATH}${SEARCH_PATH}?${SEARCH_PARAM}${searchQuery}&${PAGE_HITS}${hitsPerPage}&${PAGE_PARAM}${page}`)\r\n      .then(res => res.json())\r\n      .then(result => this.setNews(result))\r\n      .catch(error => error);\r\n  }\r\n\r\n  handleInputChange = ({ target: { value } }) => {\r\n    this.setState({\r\n      searchQuery: value\r\n    })\r\n  }\r\n\r\n  getSearch = ({ key }) => {\r\n    if(key === 'Enter') {\r\n      const { searchQuery, hitsPerPage } = this.state;\r\n      this.setState({\r\n        page: 0,\r\n      })\r\n      this.fetchData(searchQuery, hitsPerPage, 0);\r\n    }\r\n  }\r\n\r\n  setNews = result => {\r\n    this.setState({ result });\r\n  }\r\n\r\n  handleHitsChange = ({ target: { value } }) => {\r\n    const { searchQuery } = this.state;\r\n\r\n    this.setState({\r\n      hitsPerPage: +value,\r\n      page: 0\r\n    }, () => {\r\n      this.fetchData(searchQuery, this.state.hitsPerPage, 0);\r\n    })\r\n  }\r\n\r\n  handlePageChange = ({ target }) => {\r\n    const btnType = target.getAttribute('data-name');\r\n    let { page } = this.state;\r\n\r\n    if(!isNaN(btnType)) {\r\n      this.updatePage(+btnType);\r\n    } else {\r\n      switch (btnType) {\r\n        case 'next':\r\n          this.updatePage(page + 1);\r\n          break;\r\n        case 'prev':\r\n          this.updatePage(page - 1);\r\n          break;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  updatePage = (number) => {\r\n    const { searchQuery, hitsPerPage } = this.state;\r\n    this.setState({\r\n      page: number,\r\n    }, () => {\r\n      this.fetchData(searchQuery, hitsPerPage, number);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { searchQuery, result, hitsPerPage } = this.state;\r\n    const { hits = [], page, nbPages } = result;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Title title=\"Algolia Api News\" />\r\n        <Select options={HITS} handleChange={this.handleHitsChange} value={hitsPerPage} />\r\n        <Pagination\r\n          onClick={this.handlePageChange}\r\n          page={page}\r\n          lastPage={nbPages}\r\n        />\r\n        <Input onKeyPress={this.getSearch} onChange={this.handleInputChange} value={searchQuery} />\r\n        <ul className=\"newsList\">\r\n          {hits.map(({ author, created_at, num_comments, objectID, title, points, url }) =>\r\n            <NewsPost\r\n              key={objectID}\r\n              author={author}\r\n              created_at={created_at}\r\n              num_comments={num_comments}\r\n              title={title}\r\n              points={points}\r\n              url={url}\r\n            />\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default News;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/news/news';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}