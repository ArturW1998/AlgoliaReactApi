{"version":3,"sources":["serviceWorker.js","constants/constants.js","components/title/title.jsx","components/post/post.jsx","components/input/input.jsx","components/select/select.jsx","components/pagination/pagination.jsx","containers/posts/posts.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","BASE_PATH","HITS","value","label","Title","title","className","defaultProps","Post","author","createdAt","numComments","points","url","href","rel","target","Date","toLocaleDateString","Input","onChange","onKeyPress","placeholder","handleChange","options","length","defaultValue","onBlur","map","key","Pagination","onClick","page","lastPage","data-name","gapBtns","middleBtn","lastBtns","num","renderPaginationBtns","Posts","searchQuery","result","hitsPerPage","fetchData","PARAMS","fetch","res","json","setNews","handleInputChange","setState","handleHitsChange","getSearch","handlePageChange","btnType","getAttribute","Number","isNaN","updatePage","this","hits","nbPages","isHitsExist","objectID","created_at","num_comments","Component","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.32071120.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\n/* eslint-disable no-console, no-param-reassign */\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n/* eslint-enable */\n","export const BASE_PATH = 'https://hn.algolia.com/api/v1';\nexport const SEARCH_PATH = '/search';\nexport const SEARCH_PARAM = 'query=';\nexport const PAGE_HITS = 'hitsPerPage=';\nexport const PAGE_PARAM = 'page=';\n\nexport const HITS = [\n  {\n    value: 10,\n    label: 10,\n  },\n  {\n    value: 20,\n    label: 20,\n  },\n  {\n    value: 40,\n    label: 40,\n  },\n  {\n    value: 50,\n    label: 50,\n  },\n];\n\nexport const PREV_PAGE = 'prev';\nexport const NEXT_PAGE = 'next';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './title.css';\n\nconst Title = ({ title }) => <h1 className=\"title\">{title}</h1>;\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nTitle.defaultProps = {\n  title: 'Simple title',\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './post.css';\n\nconst Post = ({ author, createdAt, numComments, title, points, url }) => (\n  <li className=\"post\">\n    <a className=\"description\" href={url} rel=\"noreferrer\" target=\"_blank\">\n      <h2 className=\"smTitle\">{title}</h2>\n      <span className=\"text\">{`${points} points`}</span>\n      <span className=\"comments\">{`${numComments} comments`}</span>\n      <span className=\"date\">\n        {createdAt ? new Date(createdAt).toLocaleDateString() : 'No date'}\n      </span>\n      <span className=\"author\">{author}</span>\n    </a>\n  </li>\n);\n\nPost.propTypes = {\n  author: PropTypes.string,\n  createdAt: PropTypes.string,\n  numComments: PropTypes.number,\n  title: PropTypes.string,\n  points: PropTypes.number,\n  url: PropTypes.string,\n};\n\nPost.defaultProps = {\n  author: 'Artur',\n  createdAt: '',\n  numComments: 0,\n  title: 'Here should be a title',\n  points: 0,\n  url: '#',\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './input.css';\n\nconst Input = ({ onChange, value, onKeyPress }) => (\n  <div className=\"inputWrapper\">\n    <i className=\"fas fa-search\" />\n    <input\n      className=\"input\"\n      onChange={onChange}\n      onKeyPress={onKeyPress}\n      placeholder=\"Click to search\"\n      value={value}\n    />\n  </div>\n);\n\nInput.propTypes = {\n  onChange: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  value: PropTypes.string,\n};\n\nInput.defaultProps = {\n  onChange: () => {},\n  onKeyPress: () => {},\n  value: '',\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './select.css';\n\nconst Input = ({ handleChange, options, value }) => (\n  <div className=\"selectWrapper\">\n    {options.length > 0 ? (\n      <>\n        <select defaultValue={value} onBlur={handleChange} onChange={handleChange}>\n          {options.map(({ value, label }) => (\n            <option key={value} value={value}>\n              {label}\n            </option>\n          ))}\n        </select>\n        <span className=\"selectText\">per page</span>\n      </>\n    ) : (\n      <div className=\"placeholder\">&quot;No items&quot;</div>\n    )}\n  </div>\n);\n\nInput.propTypes = {\n  handleChange: PropTypes.func,\n  options: PropTypes.array,\n  value: PropTypes.number,\n};\n\nInput.defaultProps = {\n  handleChange: () => {},\n  options: [],\n  value: 0,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PREV_PAGE, NEXT_PAGE } from '../../constants/constants';\n\nimport './pagination.css';\n\nconst renderPaginationBtns = (onClick, page, lastPage) => {\n  const startBtns = [page, page + 1, page + 2];\n  const gapBtns = [page - 2, page - 1, page];\n  const middleBtn = ['...'];\n  const lastBtns = [lastPage - 3, lastPage - 2, lastPage - 1];\n\n  let btnsArr = [];\n\n  if (page < lastPage - 6) {\n    btnsArr = [...startBtns, ...middleBtn, ...lastBtns];\n  } else if (page < lastPage - 4) {\n    btnsArr = [...gapBtns, ...middleBtn, ...lastBtns];\n  } else if (page < lastPage - 3) {\n    btnsArr = [...gapBtns, ...lastBtns]; // last 6 pages\n  } else if (page === 0 && lastPage === 0) {\n    btnsArr = [];\n  } else {\n    btnsArr = [...middleBtn, ...lastBtns]; // last 3 pages\n  }\n\n  return btnsArr.map(num =>\n    num === '...' ? (\n      num\n    ) : (\n      <button key={num} className={num === page ? 'active' : ''} data-name={num} onClick={onClick}>\n        {num}\n      </button>\n    ),\n  );\n};\n\nconst Pagination = ({ onClick, page, lastPage }) => (\n  <div className=\"paginationWrapper\">\n    {page !== 0 && (\n      <button data-name={PREV_PAGE} onClick={onClick}>\n        {'<<'}\n      </button>\n    )}\n    {renderPaginationBtns(onClick, page, lastPage)}\n    {page !== lastPage - 1 && (\n      <button data-name={NEXT_PAGE} onClick={onClick}>\n        {'>>'}\n      </button>\n    )}\n  </div>\n);\n\nPagination.propTypes = {\n  onClick: PropTypes.func,\n  page: PropTypes.number,\n  lastPage: PropTypes.number,\n};\n\nPagination.defaultProps = {\n  onClick: () => {},\n  page: 0,\n  lastPage: 0,\n};\n\nexport default Pagination;\n","import React, { Component } from 'react';\n\nimport {\n  BASE_PATH,\n  SEARCH_PATH,\n  SEARCH_PARAM,\n  PAGE_HITS,\n  PAGE_PARAM,\n  HITS,\n  PREV_PAGE,\n  NEXT_PAGE,\n} from '../../constants/constants';\nimport Title from '../../components/title/title';\nimport Post from '../../components/post/post';\nimport Input from '../../components/input/input';\nimport Select from '../../components/select/select';\nimport Pagination from '../../components/pagination/pagination';\n\nimport './posts.css';\n\nclass Posts extends Component {\n  state = {\n    searchQuery: '',\n    result: {},\n    hitsPerPage: 20,\n    page: 0,\n  };\n\n  componentDidMount() {\n    const { searchQuery, hitsPerPage, page } = this.state;\n    this.fetchData(searchQuery, hitsPerPage, page);\n  }\n\n  fetchData = (searchQuery, hitsPerPage, page) => {\n    const PARAMS = `${SEARCH_PARAM}${searchQuery}&${PAGE_HITS}${hitsPerPage}&${PAGE_PARAM}${page}`;\n\n    fetch(`${BASE_PATH}${SEARCH_PATH}?${PARAMS}`)\n      .then(res => res.json())\n      .then(result => this.setNews(result))\n      .catch(error => error);\n  };\n\n  handleInputChange = ({ target: { value } }) => {\n    this.setState({\n      searchQuery: value,\n    });\n  };\n\n  handleHitsChange = ({ target: { value } }) => {\n    const { searchQuery } = this.state;\n    const page = 0;\n\n    this.setState(\n      {\n        hitsPerPage: +value,\n        page,\n      },\n      () => {\n        const { hitsPerPage } = this.state;\n\n        this.fetchData(searchQuery, hitsPerPage, page);\n      },\n    );\n  };\n\n  getSearch = ({ key }) => {\n    if (key === 'Enter') {\n      const { searchQuery, hitsPerPage } = this.state;\n      const page = 0;\n      this.setState({\n        page,\n      });\n      this.fetchData(searchQuery, hitsPerPage, page);\n    }\n  };\n\n  setNews = result => {\n    this.setState({ result });\n  };\n\n  handlePageChange = ({ target }) => {\n    const btnType = target.getAttribute('data-name');\n    const { page } = this.state;\n\n    if (!Number.isNaN(btnType)) {\n      this.updatePage(+btnType);\n    } else {\n      switch (btnType) {\n        case PREV_PAGE:\n          this.updatePage(page - 1);\n          break;\n        case NEXT_PAGE:\n          this.updatePage(page + 1);\n          break;\n        default:\n      }\n    }\n  };\n\n  updatePage = page => {\n    const { searchQuery, hitsPerPage } = this.state;\n    this.setState(\n      {\n        page,\n      },\n      () => {\n        this.fetchData(searchQuery, hitsPerPage, page);\n      },\n    );\n  };\n\n  render() {\n    const { searchQuery, result, hitsPerPage } = this.state;\n    const { hits = [], page, nbPages } = result;\n    const isHitsExist = hits.length > 0;\n\n    return (\n      <div className=\"wrapper\">\n        <Title title=\"Hacker News\" />\n        <Select handleChange={this.handleHitsChange} options={HITS} value={hitsPerPage} />\n        {isHitsExist && (\n          <Pagination lastPage={nbPages} onClick={this.handlePageChange} page={page} />\n        )}\n        <Input onChange={this.handleInputChange} onKeyPress={this.getSearch} value={searchQuery} />\n        <ul className=\"newsList\">\n          {hits.map(\n            ({\n              author,\n              objectID,\n              title,\n              points,\n              url,\n              created_at: createdAt,\n              num_comments: numComments,\n            }) => (\n              <Post\n                key={objectID}\n                author={author}\n                createdAt={createdAt}\n                numComments={numComments}\n                points={points}\n                title={title}\n                url={url}\n              />\n            ),\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Posts;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './containers/posts/posts';\n\nimport './index.css';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}